"Coding Part of the exercise" Photo Manager

<<Goals of the project>>
Design a program in Java programming language and in desktop IntelliJ environment that will perform the following:
* The User will be able to select an existing profile or create his own new profile (he will enter his code and username. This information will be stored on a xml file)
* The program will allow the users to create groups of management data about his photos so that Photo Manager becomes a personalized tool (each user will have his owm 'database' for saving photos and he will be able to manage his photos {example select multiple photos,de-select multiple photo, mass/individual deleting of pictures)
* It will allow the user to insert search filters to locate and view photos related to meta-data that he has inserted 
* It will allow the user to make entry of meta-data on selected photos
* It will allow the user to browse photos (a 'default' pic will be displayed before the user inserts any data on the filters. Also, when the user's inserted data on filters doesnt match with any picture's meta-data then a 'no result found' picture will be displayed on the display area)

**NOTES
**The text inside the () is my comments
**There will be 6 databases, one for each user
**Each database must be a xml file
**Each database will contain only the path of each photo and the meta-data of the photo
**The Program will accept only 6 profiles in total

*No FxJava libraries
*Dont forget to improve the GUI
*Meta-data is the picture's details given by the user

example
when the user inserts the filters:  red    keyboard
pictures with these meta-data will be displayed 


************** Below are my instructions for the buttons*****************

1) SelectionScreenProfile.Form -> User can select or create new profile
Button1 to Button6 -> Select an existing profile or create a new one
Button7 (Background Swap)-> Background Changer
*idea* a button under every profile which it will delete your profile -> Resets your Profile
Field View1 -> Show Time Clock
Field View2 -> Show Current Date

2) UserData.Form -> The user has the ability to see/assign his personal identifying information
**This Form opens when you create your profile

Button1 (Save) -> Saves the user informations and exits this form
Label1 to label5 -> Words 'categories of personal identifying information'
TextField1 to TextField5 -> The user will insert his personal identifying information

3) Profile1_Gadget.Form -> Pre-existing form where the user is a customer and searches for electronic items in existing photos through filters
Label1 -> Word "Filters" 
TextFieldl to TextField8 -> User defined search-filters(meta-data) will be inserted here
Label2 to Label9 -> The general categories of his filters (General meta-data)

In the "Profile1_Gadget.Form" the user has the ability of the following actions:
Button1 (UserData) -> *UserData.Form opens*
Button2 (Upload Photo) -> uploads a new photo (when the user inserts a new photo, the program will ask him to insert the meta-data of the new photo **he can also insert many photos at the same time but the program will not ask for the meta-data)
Button3 (DELETE YOUR PROFILE) -> his profile will be deleted (The User should insert the Words 'DELETE' in order to confirm his choice)
Button4 (Search) -> *DatabaseManagment.From opens* (Displays only photos which match with the meta-data inserted by the user) 
Button5 (Browse all Photos) -> *DatabaseManagment.From opens* (all his photos from the Database.xml will be displayed) (It will be like completeing a search without filters)
Button6 (Change your Filters) -> *FilterEditor.Form opens* (The User will change his profile's general category of Filters (General meta-data))
Button7 (Sign out) -> *this form closes* *Profile.Form opens*
Button8 (Background Changer) -> The Background will change

4) Profile2.Form -> User creates a new profile
The Buttons are the same as those of the 'Profile1_Gadget Form' but the filters and meta-data arent inserted. The User will insert his own meta-data

5) DatabaseManagment.From -> The user will be able to manage the photos which he has saved (delete photos, mass/individual ability to select photos, browse his photos)
Button1 (show more) -> The next 10 photos will be displayed
Label1 to Label10 -> The Photos will be displayed here
Button2 (Scrap Photo) -> Deletes the selected photo or Photos
Button3 (Edit Photo Details) -> The user can edit the meta-data of the selected image
Button4 (Close) -> Exit Form *DatabaseManagment.From closes*

6) FilterEditor.Form -> The User will change his profile's general category of Filters (General meta-data)
label1 -> Word "Apply Changes"
label2 to label9 -> Words "Filters" 
TextField1 to TextField8 -> Words Filter 
Button1 (Save) -> The changes will be applied
Button2 (Exit) -> The User will exit from this form *FilterEditor.Form closes*

****Add extra new forms where it is needed
You can alter these forms as you want
