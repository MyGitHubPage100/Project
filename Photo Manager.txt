"Coding Part of the exercise" Photo Manager

<<Goals of the project>>
Design a program in Java programming language and in desktop IntelliJ environment that will perform the following:
* The User will be able to select an existing profile or create his own new profile (he will enter his code and username. This information will be stored on a xml or Json file)
* The program will allow the users to create groups of management data about his photos so that Photo Manager becomes a personalized tool (each user will have his owm 'database' for saving photos and he will be able to manage his photos {example select multiple photos,de-select multiple photo, mass/individual deleting of pictures)
* It will allow the user to insert search filters to locate and view photos related to meta-data that he has inserted 
* It will allow the user to make entry of meta-data on selected photos
* It will allow the user to browse photos (a 'default' pic will be displayed before the user inserts any data on the filters. Also, when the user's inserted data on filters doesnt match with any picture's meta-data then a 'no result found' picture will be displayed on the display area)

**NOTES
**The text inside the () is my comments
**There will be 6 databases, one for each user
**Each database must be a xml or Json file
**Each database will contain only the paths of the photos and the meta-data of the photos
**The Program will accept only 6 profiles in total

*Try to limit the use of libraries that need to be downloaded and inserted manually 
*No FxJava libraries
*Dont forget to improve the GUI
*Meta-data is the picture's details given by the user

example
category of meta-data means 

example
when the user inserts the filters:  red    keyboard
pictures with these meta-data will be displayed 


************** Below are my instructions for the buttons*****************

1) Profile.Form -> User can select or create new profile   ****Rename it to "SelectionScreenProfile.Form"****
Button1 to Button6 -> Select an existing profile or create a new one
Button7 (Background Swap)-> Background Changer
*idea* a button under every profile which it will delete your profile -> Resets your Profile
Field View1 -> Show Time Clock
Field View2 -> Show Current Date

2) UserData.Form -> The user has the ability to see/assign his personal identifying information
**This Form opens when you create your profile

Label1 to label5 -> The user's personal identifying information are displayed

3) Profile1_Gadget.Form -> Pre-existing form where the user is a customer and searches for electronic items in existing photos through filters
Label1 -> Word "Filters" 
Label2 to Label10 -> User defined search-filters(meta-data) will be inserted here
Label11-Label20 -> The general categories of the meta-data. *these are just words* dont change 

In the "Profile.Form" the user has the ability of the following actions:
Button1 (UserData) -> *UserData.Form opens*
Button2 (Upload Button) -> uploads a new photo (when the user inserts a new photo, the program will ask him to insert the meta-data of the photo)
Button3 (DELETE YOUR PROFILE) -> his profile will be deleted (The User should insert the Words 'DELETE' in order to confirm his choice)
Button4 (Manage your Photos) -> *The DatabaseManagment.Form opens*
button5 (Search) -> *PhotoDisplay.Form opens*

4) PhotoDisplay.Form -> The photos will be displayed here
Label1 to Label8 -> Photos selected by the user appear in these labels
Button1 (show more) -> The next 8 photos will be displayed

5) Profile2.Form -> User creates a new profile
The Buttons are the same as those of the 'Profile1_Gadget Form' but the filters and meta-data arent inserted. The User will insert his own meta-data

6) DatabaseManagment.From -> The user will be able to manage the photos which he has saved (delete photos, mass/individual ability to select photos, browse his photos)
Button1 (show more) -> The next 8 photos will be displayed
Label1 to Label8 -> The Photos will be displayed here
Button3 (Edit Photo Details) -> The user can edit the meta-data of the selected image
Button4 (View image details) -> The user will be able to view the meta-data of this image without changing it

****Add extra new forms where it is needed
You can alter these forms as you want
